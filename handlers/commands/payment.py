from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Command
from aiogram.utils.markdown import hlink, hbold

from db_api import User
from db_api.utils import grant_access
from handlers.states import QiwiPaid
from keyboards.callback_datas import paid_callback
from keyboards.default import start_kb
from keyboards.inline.purchase import paid_kb
from loader import dp
from services.qiwi import Payment, NotEnoughMoney, PaymentNotFound


@dp.message_handler(Command('payment'))
async def start_payment(message: types.Message, user: User, state: FSMContext):
    amount = Payment.base_amount
    payment = Payment(user=user, amount=amount)

    answer = f"""
{hbold('–ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ –Ω–∏–∂–µ, –≤–Ω–µ—Å–∏—Ç–µ –æ–ø–ª–∞—Ç—É –∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É "–û–ø–ª–∞—Ç–∏–ª".')} 
–î–æ—Å—Ç—É–ø–Ω—ã –ø–ª–∞—Ç–µ–∂–∏ Visa/Mastercard/–ú–ò–†.

üí∞ –°—É–º–º–∞ –æ–ø–ª–∞—Ç—ã: {amount} —Ä—É–±.
üëâ {hlink('–°—Å—ã–ª–∫–∞ –Ω–∞ –æ–ø–ª–∞—Ç—É', url=payment.invoice)}
    """

    await QiwiPaid.waiting_for_payment.set()
    await state.update_data(payment=payment)
    await message.answer(answer, reply_markup=paid_kb)


@dp.callback_query_handler(paid_callback.filter(action='–æ—Ç–º–µ–Ω–∞'),
                           state=QiwiPaid.waiting_for_payment)
async def cancel_payment(call: types.CallbackQuery, state: FSMContext):
    await call.answer()
    await call.message.edit_reply_markup(None)
    await call.message.answer('–û–ø–ª–∞—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞')
    await state.finish()


@dp.callback_query_handler(paid_callback.filter(action='–æ–ø–ª–∞—á–µ–Ω–æ'),
                           state=QiwiPaid.waiting_for_payment)
async def check_payment(call: types.CallbackQuery, state: FSMContext, user: User):
    state_data = await state.get_data()
    payment = state_data['payment']

    try:
        payment.check_payment()
    except NotEnoughMoney:
        answer = '–í—ã –æ–ø–ª–∞—Ç–∏–ª–∏ –Ω–µ –≤—Å—é —Å—É–º–º—É'
        await call.message.answer(answer)
    except PaymentNotFound:
        answer = '–û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.'
        await call.message.answer(answer)
    else:
        await grant_access(user, is_paid=True)
        await call.message.edit_reply_markup(None)
        answer = hbold('–û–ø–ª–∞—Ç–∞ –ø—Ä–∏–Ω—è—Ç–∞, –Ω–∞—á–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å!\n') + \
                 '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –∏ —Å–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º /help'
        await call.message.answer(answer, reply_markup=start_kb)
        await state.finish()

    await call.answer()
